---
interface Props {
  isOpen?: boolean;
  selectedProject?: {
    title: string;
    description: string;
    image: string;
  } | null;
}

const { isOpen = false, selectedProject = null } = Astro.props;
---
<div 
  data-modal
  class={`fixed inset-0 z-50 bg-black/50 backdrop-blur-sm flex items-center justify-center transition-opacity duration-300 ${isOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'}`}
>
  {selectedProject && (
    <div class="bg-black/80 border border-teal-500/20 backdrop-blur-sm p-8 rounded-xl max-w-[90vw] w-auto m-4 relative">
      <button 
        onclick="document.dispatchEvent(new CustomEvent('closeModal'))"
        class="absolute top-4 right-4 text-white/70 hover:text-white"
      >
        ✕
      </button>
      <img 
        src={selectedProject.image} 
        alt={selectedProject.title}
        class="max-h-[80vh] rounded-lg mb-4"
      />
      <h2 class="text-2xl font-bold text-white mb-4">{selectedProject.title}</h2>
      <p class="text-white/70">{selectedProject.description}</p>
    </div>
  )}
</div>

<script>
  const modal = document.querySelector('[data-modal]');
  
  function updateModal() {
    if (!modal) return;
    
    const isOpen = modal.getAttribute('data-open') === 'true';
    const projectData = modal.getAttribute('data-project');
    const project = projectData ? JSON.parse(projectData) : null;
    
    modal.classList.toggle('opacity-0', !isOpen);
    modal.classList.toggle('pointer-events-none', !isOpen);
    
    if (project) {
      modal.innerHTML = `
        <div class="bg-black/80 border border-teal-500/20 backdrop-blur-sm p-8 rounded-xl max-w-[90vw] w-auto m-4 relative">
          <button 
            onclick="document.dispatchEvent(new CustomEvent('closeModal'))"
            class="absolute top-4 right-4 text-white/70 hover:text-white"
          >
            ✕
          </button>
          <img 
            src="${project.image}" 
            alt="${project.title}"
            class="max-h-[80vh] rounded-lg mb-4"
          />
          <h2 class="text-2xl font-bold text-white mb-4">${project.title}</h2>
          <p class="text-white/70">${project.description}</p>
        </div>
      `;
    } else {
      modal.innerHTML = '';
    }
  }

  if (modal) {
    // Close on backdrop click
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        document.dispatchEvent(new CustomEvent('closeModal'));
      }
    });

    // Watch for attribute changes
    const observer = new MutationObserver(updateModal);
    observer.observe(modal, { 
      attributes: true, 
      attributeFilter: ['data-open', 'data-project'] 
    });
  }

  // Handle close event
  document.addEventListener('closeModal', () => {
    if (modal) {
      modal.setAttribute('data-open', 'false');
      modal.setAttribute('data-project', '');
    }
  });
</script>
